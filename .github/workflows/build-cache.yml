on:
  push:
    branches: [ test-build ]
  pull_request:
    branches: [ test-build ]

env:
  DEBIAN_FRONTEND: noninteractive
  CMAKE_BUILD_PARALLEL_LEVEL: 10
  CC: /usr/bin/clang
  CXX: /usr/bin/clang++
  RDKIT_VERSION: 2022_03_2
  LD_LIBRARY_PATH: /usr/local/lib
  DEB_BUILD_OPTIONS: nocheck

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

#    - name: Cache libboost
#      uses: actions/cache@v3
#      id: cache-libboost-others
#      with:
#        path: "~/boost"
#        key: libboost1.74-all-dev
#    - name: Install libboost
#      env:
#        CACHE_HIT: ${{steps.cache-libboost-others.outputs.cache-hit}}
#      run: |
#        if [[ "$CACHE_HIT" == 'true' ]]; then
#          ls  ~/boost/usr/include
#          sudo cp --force --recursive ~/boost/* /
#        else
#          sudo apt-get update && sudo apt-get install --yes libboost1.74-all-dev
#          mkdir -p ~/boost
#          sudo dpkg -L libboost1.74-all-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
#        fi

    - name: Cache coordgen
      uses: actions/cache@v3
      id: cache-coordgen
      with:
        path: "~/coordgen"
        key: coordgen
    - name: Install coordgen
      env:
        CACHE_HIT: ${{steps.cache-coordgen.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
          ls  ~/coordgen/usr/include
          ls  ~/coordgen/usr/share
          sudo cp --force --recursive ~/coordgen/* /
        else
          sudo apt-get update && sudo apt-get install --yes libcoordgen-dev
          mkdir -p ~/coordgen
          sudo dpkg -L libcoordgen-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/coordgen/
        fi

    - name: test coordgen
      run: |
        whereis coordgen
        ls
        ls ~/coordgen/usr/include
        ls ~/coordgen/usr/include/coordgen


    - name: Cache cargo
      id: cargo-cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo
      if: steps.cargo-cache.outputs.cache-hit != 'true'
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env

    - name: test cargo
      run: whereis cargo