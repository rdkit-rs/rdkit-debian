Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 rdkit (201803.4+dfsg-1) UNRELEASED; urgency=medium
 .
   * Team upload.
     Needs to wait for schroedinger-maeparser and schroedinger-coordgenlibs
     to arrive in the archive.
 .
   * New upstream release.
   * Standards-Version: 4.2.1
Author: Steffen Moeller <moeller@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2018-12-07

--- rdkit-201803.4+dfsg.orig/Code/PgSQL/rdkit/bfp_gin.c
+++ rdkit-201803.4+dfsg/Code/PgSQL/rdkit/bfp_gin.c
@@ -116,7 +116,7 @@ Datum gin_bfp_consistent(PG_FUNCTION_ARG
 
   int32 i, nCommon = 0;
   for (i = 0; i < nkeys; ++i) {
-    if (check[i] == TRUE) {
+    if (check[i] == GIN_TRUE) {
       ++nCommon;
     }
   }
--- rdkit-201803.4+dfsg.orig/Code/PgSQL/rdkit/bfp_gist.c
+++ rdkit-201803.4+dfsg/Code/PgSQL/rdkit/bfp_gist.c
@@ -137,7 +137,7 @@ gbfp_compress(PG_FUNCTION_ARGS)
     
     gistentryinit(*retval, PointerGetDatum(gbfp),
 		  entry->rel, entry->page,
-		  entry->offset, FALSE);
+		  entry->offset, false);
   }
   /* no change should be required on inner nodes */
   else {
@@ -166,7 +166,7 @@ gbfp_decompress(PG_FUNCTION_ARGS)
     retval = (GISTENTRY *) palloc(sizeof(GISTENTRY));
     gistentryinit(*retval, PointerGetDatum(key),
 		  entry->rel, entry->page,
-		  entry->offset, FALSE);
+		  entry->offset, false);
     PG_RETURN_POINTER(retval);
   }
 
@@ -680,7 +680,7 @@ gbfp_fetch(PG_FUNCTION_ARGS)
   retval = palloc(sizeof(GISTENTRY));
   
   gistentryinit(*retval, PointerGetDatum(bfp),
-		entry->rel, entry->page, entry->offset, FALSE);
+		entry->rel, entry->page, entry->offset, false);
   
   PG_RETURN_POINTER(retval);
 }
--- rdkit-201803.4+dfsg.orig/Code/PgSQL/rdkit/low_gist.c
+++ rdkit-201803.4+dfsg/Code/PgSQL/rdkit/low_gist.c
@@ -55,7 +55,7 @@ gslfp_compress(PG_FUNCTION_ARGS)
 
     gistentryinit(*retval, PointerGetDatum(makeLowSparseFingerPrint(fp, NUMRANGE)),
                   entry->rel, entry->page,
-                  entry->offset, FALSE);
+                  entry->offset, false);
     freeCSfp(fp);
   }       
                 
@@ -76,7 +76,7 @@ gslfp_decompress(PG_FUNCTION_ARGS)
 
       gistentryinit(*retval, PointerGetDatum(key),
                     entry->rel, entry->page,
-                    entry->offset, FALSE);
+                    entry->offset, false);
 
       PG_RETURN_POINTER(retval);
     }
--- rdkit-201803.4+dfsg.orig/Code/PgSQL/rdkit/rdkit_gist.c
+++ rdkit-201803.4+dfsg/Code/PgSQL/rdkit/rdkit_gist.c
@@ -69,7 +69,7 @@ compressAllTrue(GISTENTRY *entry)
   
   gistentryinit(*retval, PointerGetDatum(b),
 		entry->rel, entry->page,
-		entry->offset, FALSE);
+		entry->offset, false);
   
   return retval;
 }
@@ -89,7 +89,7 @@ gmol_compress(PG_FUNCTION_ARGS)
 
     gistentryinit(*retval, PointerGetDatum(makeMolSignature(m)),
                   entry->rel, entry->page,
-                  entry->offset, FALSE);
+                  entry->offset, false);
     freeCROMol(m);
   }       
   else if ( !ISALLTRUE(DatumGetPointer(entry->key)) ) {
@@ -114,7 +114,7 @@ gsfp_compress(PG_FUNCTION_ARGS)
 
     gistentryinit(*retval, PointerGetDatum(makeSfpSignature(fp, NUMBITS)),
                   entry->rel, entry->page,
-                  entry->offset, FALSE);
+                  entry->offset, false);
     freeCSfp(fp);
   }       
   else if ( !ISALLTRUE(DatumGetPointer(entry->key)) ) {
@@ -137,7 +137,7 @@ gmol_decompress(PG_FUNCTION_ARGS)
 
     gistentryinit(*retval, PointerGetDatum(key),
 		  entry->rel, entry->page,
-		  entry->offset, FALSE);
+		  entry->offset, false);
     
     PG_RETURN_POINTER(retval);
   }
@@ -738,7 +738,7 @@ greaction_compress(PG_FUNCTION_ARGS)
     
     gistentryinit(*retval, PointerGetDatum(makeReactionSign(rxn)),
                   entry->rel, entry->page,
-                  entry->offset, FALSE);
+                  entry->offset, false);
     freeChemReaction(rxn);
   }
   else if ( !ISALLTRUE(DatumGetPointer(entry->key)) ) {
